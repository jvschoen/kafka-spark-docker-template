version: '2'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.2.0
    container_name: zookeeper_kafka-spark-docker-template
    hostname: zookeeper
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_LOG4J_ROOT_LOGLEVEL: "WARN"
      ZOOKEEPER_TOOLS_LOG4J_LOGLEVEL: "ERROR"
    extra_hosts:
      - "moby:127.0.0.1"

  kafka:
    image: confluentinc/cp-kafka:5.2.0
    container_name: kafka_kafka-spark-docker-template
    hostname: kafka
    ports:
      - '9092:9092'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=WARN"
      KAFKA_LOG4J_ROOT_LOGLEVEL: "WARN"
      KAFKA_TOOLS_LOG4J_LOGLEVEL: "ERROR"
      # Retain messages for 10 minutes, check every 60s
      KAFKA_LOG_RETENTION_MS: 600000
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 60000
    extra_hosts:
      - "moby:127.0.0.1"
      
  kafka-create-topics:
    image: confluentinc/cp-kafka:5.2.0
    depends_on:
      - kafka
    container_name: kafka-create-topics_kafka-spark-docker-template
    hostname: kafka-create-topics
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                       cub kafka-ready -b kafka:9092 1 20 && \
                       kafka-topics --create --topic test --if-not-exists --zookeeper zookeeper:2181 --partitions 1 --replication-factor 1 && \
                       sleep infinity'"
    environment:
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored
    extra_hosts:
      - "moby:127.0.0.1"
  
  jupyter:
    container_name: jupyter_kafka-spark-docker-template
    user: root
    build: jupyter/.
    volumes:
      # These mount your notebooks and data dirs to local repo to keep in sync.
      - ./jupyter/notebooks:/home/jovyan/notebooks
      - ./jupyter/data:/home/jovyan/data
      
      # This ensures we can just have the key in one central location for local and on docker
      # If this image ends up being pushed to the cloud, then the file must be copied.
      - $HOME/.aws/credentials:/home/jovyan/.aws/credentials:ro
      # Provides twitter developer tokens
      - $HOME/.secrets/twitter.json:/home/jovyan/.secrets/twitter.json:ro   
    environment:
      - GRANT_SUDO=yes
      - JUPYTER_ENABLE_LAB=yes
    ports:
      - "8888:8888"
    environment:
      - GRANT_SUDO=yes
      - JUPYTER_ENABLE_LAB=yes

  flask-ml:
    container_name: flask-ml_kafka-spark-docker-template
    hostname: ml
    build: ml-rest-flask/.
    ports:
      - "9000:9000"
    extra_hosts:
      - "moby:127.0.0.1"
